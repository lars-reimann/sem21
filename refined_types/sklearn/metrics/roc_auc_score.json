{
    "sklearn.metrics.roc_auc_score":{
        "average":{
            "type":{
                "kind":"EnumType",
                "types":[
                    {
                        "kind":"EnumType",
                        "name":"micro"
                    },
                    {
                        "kind":"EnumType",
                        "name":"macro"
                    },
                    {
                        "kind":"EnumType",
                        "name":"samples"
                    },
                    {
                        "kind":"EnumType",
                        "name":"weighted"
                    }
                ]
            },
            "docstring":{
                "type":"{'micro', 'macro', 'samples','weighted'} or None, default='macro'",
                "description":"If None, the scores for each class are returned. Otherwise, this determines the type of averaging performed on the data: Note: multiclass ROC AUC currently only handles the ‘macro’ and ‘weighted’ averages.\n\n'micro':\nCalculate metrics globally by considering each element of the label indicator matrix as a label.\n\n'macro':\nCalculate metrics for each label, and find their unweighted mean. This does not take label imbalance into account.\n\n'weighted':\nCalculate metrics for each label, and find their average, weighted by support (the number of true instances for each label).\n\n'samples':\nCalculate metrics for each instance, and find their average.\n\nWill be ignored when y_true is binary.\n\n"
            }
        },
        "max_fpr":{
            "type":{
                "kind":"BoundaryType",
                "baseType":"float",
                "min":0.0,
                "max":1.0,
                "minInclusive":false,
                "maxInclusive":true
            },
            "docstring":{
                "type":"float > 0 and <= 1, default=None",
                "description":"If not None, the standardized partial AUC [2] over the range [0, max_fpr] is returned. For the multiclass case, max_fpr, should be either equal to None or 1.0 as AUC ROC partial computation currently is not supported for multiclass."
            }
        },
        "multi_class":{
            "type":{
                "kind":"EnumType",
                "types":[
                    {
                        "kind":"EnumType",
                        "name":"raise"
                    },
                    {
                        "kind":"EnumType",
                        "name":"ovr"
                    },
                    {
                        "kind":"EnumType",
                        "name":"ovo"
                    }
                ]
            },
            "docstring":{
                "type":"{'raise', 'ovr', 'ovo'}, default='raise'",
                "description":"Only used for multiclass targets. Determines the type of configuration to use. The default value raises an error, so either 'ovr' or 'ovo' must be passed explicitly.\n\n'ovr':\nStands for One-vs-rest. Computes the AUC of each class against the rest [3] [4]. This treats the multiclass case in the same way as the multilabel case. Sensitive to class imbalance even when average == 'macro', because class imbalance affects the composition of each of the ‘rest’ groupings.\n\n'ovo':\nStands for One-vs-one. Computes the average AUC of all possible pairwise combinations of classes [5]. Insensitive to class imbalance when average == 'macro'.\n\n"
            }
        }
    }
}
